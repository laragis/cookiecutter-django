version: '3'

volumes:
  {{ cookiecutter.project_slug }}_local_postgres_data: {}
  {{ cookiecutter.project_slug }}_local_postgres_data_backups: {}

x-common-django:
  &default-common-django
  build:
    context: .
    dockerfile: ./compose/local/django/Dockerfile
  image: ttungbmt/{{ cookiecutter.project_slug }}_local_django:${APP_VERSION}
  depends_on:
    - postgres
    {%- if cookiecutter.use_celery == 'y' %}
    - redis
    {%- endif %}
    {%- if cookiecutter.use_mailhog == 'y' %}
    - mailhog
    {%- endif %}
  volumes:
    - .:/app:z
  env_file:
    - ./.envs/.local/.django
    - ./.envs/.local/.postgres

services:
  django:
    << : *default-common-django
    container_name: {{ cookiecutter.project_slug }}_local_django
    command: /start
    ports:
      - "${DJANGO_PORT:-8000}:8000"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ttungbmt/{{ cookiecutter.project_slug }}_production_postgres
    container_name: {{ cookiecutter.project_slug }}_local_postgres
    volumes:
      - {{ cookiecutter.project_slug }}_local_postgres_data:/var/lib/postgresql/data
      - {{ cookiecutter.project_slug }}_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  docs:
    image: ttungbmt/{{ cookiecutter.project_slug }}_local_docs
    container_name: {{ cookiecutter.project_slug }}_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./{{ cookiecutter.project_slug }}:/app/{{ cookiecutter.project_slug }}:z
    ports:
      - "${DOCS_PORT:-9000}:9000"
    command: /start-docs
  {%- if cookiecutter.use_mailhog == 'y' %}

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: {{ cookiecutter.project_slug }}_local_mailhog
    ports:
      - "${MAILHOG_PORT:-8025}:8025"

  {%- endif %}
  {%- if cookiecutter.use_celery == 'y' %}

  redis:
    image: redis:6
    container_name: {{ cookiecutter.project_slug }}_local_redis

  celeryworker:
    <<: *default-common-django
    container_name: {{ cookiecutter.project_slug }}_local_celeryworker
    depends_on:
      - redis
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *default-common-django
    container_name: {{ cookiecutter.project_slug }}_local_celerybeat
    depends_on:
      - redis
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celerybeat

  flower:
    <<: *default-common-django
    container_name: {{ cookiecutter.project_slug }}_local_flower
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    command: /start-flower

  {%- endif %}
  {%- if cookiecutter.frontend_pipeline in ['Gulp', 'Webpack'] %}

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: ttungbmt/{{ cookiecutter.project_slug }}_local_node
    container_name: {{ cookiecutter.project_slug }}_local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - "${NODE_PORT:-3000}:3000"
      {%- if cookiecutter.frontend_pipeline == 'Gulp' %}
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "${BROWERSYNC_PORT:-3001}:3001"
      {%- endif %}

  {%- endif %}
