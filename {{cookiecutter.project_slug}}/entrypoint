#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

INVOKE_LOG_STDOUT=${INVOKE_LOG_STDOUT:-False}
invoke () {
    if [ $INVOKE_LOG_STDOUT = 'true' ] || [ $INVOKE_LOG_STDOUT = 'True' ]
    then
        /usr/local/bin/invoke $@
    else
        /usr/local/bin/invoke $@ > /usr/src/django/invoke.log 2>&1
    fi
    echo -e "$(c C)$@ tasks done$(c)"
}

cmd="$@"

source $HOME/.bashrc

echo "-----------------------------------------------------"
echo -e "$(c G)STARTING DJANGO ENTRYPOINT $(date)$(c)"
echo "-----------------------------------------------------"

invoke settingenv

source $HOME/.override_env

invoke waitfordbs

if [ ${IS_CELERY} = "true" ]  || [ ${IS_CELERY} = "True" ]
then
    invoke waitformigrations
    echo "Executing Celery server $cmd"
else
    invoke migrations
    invoke preparefixture

    if [ ${FORCE_REINIT} = "true" ]  || [ ${FORCE_REINIT} = "True" ] || [ ! -e "/mnt/volumes/statics/django_init.lock" ]; then
        invoke loaddata
        invoke updateadmin
        invoke initialized
    fi

    if [ ${APP_ENV} = "production" ]; then
        invoke collectstatic
    fi

    echo "Executing Server $cmd"
fi

echo "-----------------------------------------------------"
echo -e "$(c G)FINISHED DJANGO ENTRYPOINT$(c) --------------------------"
echo "-----------------------------------------------------"

# Run the CMD
echo "Got command $cmd"
exec $cmd